description: "Uses circleci-security-parser to combine tool output generated by this orb into a single .csv file."
parameters:
  config:
    default: "~/project/.security/parser.yml"
    type: string
    description: "The location of the security.yml file to consume"
steps:
  - run:
      name: "[security/core] [Install] curl, sudo"
      command: |
        if [[ ! $(which curl) ]]; then
          (set +o pipefail; apk add curl || apt-get install -y curl || yum install -y curl)
        fi
        if [[ ! $(which sudo) ]]; then
          (set +o pipefail; apk add sudo || apt-get install -y sudo || yum install -y sudo)
        fi
  - run:
        name: "[security/parse] [Install] Python 3.6.12"
        command: |
          if [[ $(which apk) ]]; then
            (set +o pipefail; sudo apk add python3 python3-dev libffi-dev libressl-dev musl-dev build-base)
          else
            sudo apt-get update -y
            sudo apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev
            sudo apt-get install -y libsqlite3-0
            curl https://www.python.org/ftp/python/3.6.12/Python-3.6.12.tar.xz > Python-3.6.12.tar.xz
            tar xvf Python-3.6.12.tar.xz
            cd Python-3.6.12
            ./configure --enable-loadable-sqlite-extensions --with-ensurepip=install
            make -j8 build_all
            sudo make -j8 altinstall
          fi
  - run:
      name: "[security/parse] [Prepare] Create output folder"
      command: mkdir -p ~/.circleci-security/parsed_output
  - run:
      name: "[security/parse] [Prepare] Create tool folder"
      command: mkdir -p ~/.circleci-security/tool
  - run:
      name: "[security/parse] [Install] circleci-security-parser"
      command: |
        git clone https://github.com/itsdean/circleci-security-parser ~/.circleci-security/tool/circleci-security-parser
        cd ~/.circleci-security/tool/circleci-security-parser
        if [[ $(which pip3.6) ]]; then
          pip3.6 install --user -r requirements.txt
        else
          pip3 install --user -r requirements.txt
        fi
  - run:
      name: "[security/parse] [Run] circleci-security-parser"
      command: |
        cd ~/.circleci-security/tool/circleci-security-parser
        if [[ $(which python3.6) ]]; then
          python3.6 main.py -i ~/.circleci-security/tool_output -o ~/.circleci-security/parsed_output -v -c << parameters.config >>
        else
          python3 main.py -i ~/.circleci-security/tool_output -o ~/.circleci-security/parsed_output -v -c << parameters.config >>    
        fi
  - store_artifacts:
      path: ~/.circleci-security/parsed_output
